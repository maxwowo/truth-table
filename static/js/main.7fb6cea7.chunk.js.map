{"version":3,"sources":["components/Page/Page.module.css","components/Cockpit/Cockpit.js","components/TruthTable/TruthTableRow/TruthTableRow.js","components/TruthTable/TruthTableBody/TruthTableBody.js","components/TruthTable/TruthTableHead/TruthTableHead.js","components/TruthTable/TruthTable.js","components/Page/Page.js","containers/App.js","serviceWorker.js","index.js","components/Cockpit/Cockpit.module.css","containers/Helper.js"],"names":["module","exports","page","helpIcon","githubIcon","Cockpit","props","react_default","a","createElement","Container","className","classNames","styles","cockpit","textCenter","cockpitHeader","Input","transparent","cockpitInput","onChange","onInputChanged","onKeyPress","placeholder","autoFocus","TruthTableRow","row","map","col","index","key","TruthTableBody","content","TruthTable_TruthTableRow_TruthTableRow","TruthTableHead","TruthTable","Table","TruthTable_TruthTableHead_TruthTableHead","head","TruthTable_TruthTableBody_TruthTableBody","Page","components_Cockpit_Cockpit","showTable","components_TruthTable_TruthTable","Modal","isOpen","modal","toggle","onModalClicked","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","index_es","icon","faQuestionCircle","window","open","faGithub","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChanged","event","formattedExp","Helper","target","value","exp","vars","length","setState","ttHead","ttContent","handleKeyPress","preventDefault","state","modalToggle","bind","assertThisInitialized","prevState","components_Page_Page","Component","Boolean","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","OPERATORS","getVars","split","filter","el","indexOf","getExp","replace","getTableHead","concat","D_Github_truth_table_generator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","validKey","includes","isAlpha","formatExp","evalExp","truthValues","res","i","regex","RegExp","eval","bin","dec","nVars","toString","padStart","getTableContent","Math","pow","binStr","err","push"],"mappings":"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","file":"static/js/main.7fb6cea7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__17YKL\",\"helpIcon\":\"Page_helpIcon__iilKv\",\"githubIcon\":\"Page_githubIcon__1sU1f\"};","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Input, Container } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./Cockpit.module.css\";\r\n\r\nconst Cockpit = props => (\r\n  <Container className={classNames(styles.cockpit, styles.textCenter)}>\r\n    <h1 className={styles.cockpitHeader}>Truth Table Generator</h1>\r\n    <Input\r\n      className={classNames(\r\n        styles.textCenter,\r\n        styles.transparent,\r\n        styles.cockpitInput\r\n      )}\r\n      onChange={props.onInputChanged}\r\n      onKeyPress={props.onKeyPress}\r\n      placeholder=\"Enter an expression\"\r\n      autoFocus\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default Cockpit;\r\n","import React from \"react\";\r\n\r\nconst TruthTableRow = props => (\r\n  <tr>\r\n    {props.row.map((col, index) => {\r\n      return <td key={index}>{col}</td>;\r\n    })}\r\n  </tr>\r\n);\r\n\r\nexport default TruthTableRow;\r\n","import React from \"react\";\r\nimport TruthTableRow from \"../TruthTableRow/TruthTableRow\";\r\n\r\nconst TruthTableBody = props => (\r\n  <tbody>\r\n    {props.content.map((row, index) => {\r\n      return <TruthTableRow row={row} key={index} />;\r\n    })}\r\n  </tbody>\r\n);\r\n\r\nexport default TruthTableBody;\r\n","import React from \"react\";\r\nimport TruthTableRow from \"../TruthTableRow/TruthTableRow\";\r\nimport \"./TruthTableHead.module.css\";\r\n\r\nconst TruthTableHead = props => (\r\n  <thead>\r\n      <TruthTableRow row={props.row} />\r\n  </thead>\r\n);\r\n\r\nexport default TruthTableHead;\r\n","import React from \"react\";\r\nimport { Table, Container } from \"reactstrap\";\r\nimport TruthTableBody from \"./TruthTableBody/TruthTableBody\";\r\nimport TruthTableHead from \"./TruthTableHead/TruthTableHead\";\r\nimport \"./TruthTable.module.css\";\r\n\r\nconst TruthTable = props => (\r\n  <Container>\r\n    <Table>\r\n      <TruthTableHead row={props.head} />\r\n      <TruthTableBody content={props.content} />\r\n    </Table>\r\n  </Container>\r\n);\r\n\r\nexport default TruthTable;\r\n","import React from \"react\";\r\nimport Cockpit from \"../Cockpit/Cockpit\";\r\nimport TruthTable from \"../TruthTable/TruthTable\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport styles from \"./Page.module.css\";\r\n\r\nconst Page = props => (\r\n  <div className={styles.page}>\r\n    <Cockpit\r\n      onInputChanged={props.onInputChanged}\r\n      onKeyPress={props.onKeyPress}\r\n    />\r\n\r\n    {props.showTable ? (\r\n      <TruthTable content={props.content} head={props.head} />\r\n    ) : null}\r\n\r\n    <Modal isOpen={props.modal} toggle={props.onModalClicked}>\r\n      <ModalHeader toggle={props.onModalClicked}>Help</ModalHeader>\r\n      <ModalBody>\r\n        <p>Enter an expression in the input box to get started.</p>\r\n        <p>Available operators:</p>\r\n        <ul>\r\n          <li>Negation: !</li>\r\n          <li>And: &&</li>\r\n          <li>Or: ||</li>\r\n        </ul>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"outline-secondary\" onClick={props.onModalClicked}>\r\n          Dismiss\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n    <FontAwesomeIcon\r\n      onClick={props.onModalClicked}\r\n      icon={faQuestionCircle}\r\n      className={styles.helpIcon}\r\n    />\r\n    <FontAwesomeIcon\r\n      onClick={() => window.open(\"https://github.com/maxwowo\", \"_blank\")}\r\n      icon={faGithub}\r\n      className={styles.githubIcon}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Page;\r\n","import React, { Component } from \"react\";\r\nimport Page from \"../components/Page/Page\";\r\nimport \"./App.module.css\";\r\nimport * as Helper from \"./Helper\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ttHead: null,\r\n      ttContent: null,\r\n      showTable: false,\r\n      modal: false\r\n    };\r\n\r\n    this.modalToggle = this.modalToggle.bind(this);\r\n  }\r\n\r\n  modalToggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  handleInputChanged = event => {\r\n    const formattedExp = Helper.formatExp(event.target.value);\r\n    event.target.value = formattedExp;\r\n\r\n    const exp = Helper.getExp(event);\r\n    const vars = Helper.getVars(exp);\r\n    const head = Helper.getTableHead(vars, formattedExp);\r\n    const content = Helper.getTableContent(vars.length, exp, vars);\r\n\r\n    this.setState({\r\n      showTable: !exp ? false : true,\r\n      ttHead: head,\r\n      ttContent: content\r\n    });\r\n  };\r\n\r\n  handleKeyPress = event => {\r\n    if (!Helper.validKey(event.key)) event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Page\r\n        onInputChanged={this.handleInputChanged}\r\n        onKeyPress={this.handleKeyPress}\r\n        content={this.state.ttContent}\r\n        head={this.state.ttHead}\r\n        showTable={this.state.showTable}\r\n        onModalClicked={this.modalToggle}\r\n        modal={this.state.modal}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cockpit\":\"Cockpit_cockpit__j2woO\",\"cockpitHeader\":\"Cockpit_cockpitHeader__3jvsz\",\"cockpitInput\":\"Cockpit_cockpitInput__1Pssg\",\"textCenter\":\"Cockpit_textCenter__2-k1w\",\"transparent\":\"Cockpit_transparent__zgRvO\"};","const OPERATORS = \"&|!()\";\r\n\r\nexport function getVars(exp) {\r\n  exp = exp.split(/\\W/g).filter(el => el !== \"\");\r\n  return exp.filter((el, index) => index <= exp.indexOf(el));\r\n}\r\n\r\nexport function getExp(event) {\r\n  function helper(exp) {\r\n    return exp\r\n      .replace(/∧/g, \"&&\")\r\n      .replace(/∨/g, \"||\")\r\n      .replace(/~/g, \"!\")\r\n      .replace(/\\s/g, \"\");\r\n  }\r\n\r\n  return helper(event.target.value);\r\n}\r\n\r\nexport function getTableHead(vars, exp) {\r\n  return [...vars, exp];\r\n}\r\n\r\nexport function validKey(key) {\r\n  function isAlpha(key) {\r\n    return key.length === 1 && key.match(/^[A-Z]+$/i);\r\n  }\r\n\r\n  return OPERATORS.includes(key) || isAlpha(key);\r\n}\r\n\r\nexport function formatExp(exp) {\r\n  return exp\r\n    .replace(/&&/g, \"∧\")\r\n    .replace(/\\|\\|/g, \"∨\")\r\n    .replace(/!/g, \"~\");\r\n}\r\n\r\nfunction evalExp(exp, truthValues, vars) {\r\n  let res = exp;\r\n  for (let i = 0; i < vars.length; i++) {\r\n    let regex = new RegExp(vars[i], \"g\");\r\n    res = res.replace(regex, truthValues[i]);\r\n  }\r\n  return eval(res);\r\n}\r\n\r\nfunction bin(dec, nVars) {\r\n  return dec.toString(2).padStart(nVars, \"0\");\r\n}\r\n\r\nexport function getTableContent(nVars, exp, vars) {\r\n  const res = [];\r\n\r\n  for (let i = 2 ** nVars - 1; i >= 0; i--) {\r\n    let binStr = bin(i, nVars);\r\n\r\n    try {\r\n      binStr += evalExp(exp, binStr, vars);\r\n    } catch (err) {\r\n      binStr += \" \";\r\n    }\r\n\r\n    res.push(binStr);\r\n  }\r\n\r\n  return res.map(el =>\r\n    el\r\n      .replace(/(1|true)/g, \"T\")\r\n      .replace(/(0|false)/g, \"F\")\r\n      .split(\"\")\r\n  );\r\n}\r\n"],"sourceRoot":""}